print("Hello, world!");

time = {
    value = reactive(Int, 0);
    launch {
        loop {
            delay(1000);
            value.update_node(value.current_value() + 1);
        };
    };
    value
};

node = time();

response = readln();

xs = list(1, 2, 3);

mapped_list = xs.map { x -> x + 2 };

xs.print();
print(mapped_list);

print(response.uppercase());

mapped = node
    .map { x -> x + 3 }
    .map { x -> x * 7 };

// Note: This only currently works for the original node, not mapped nodes.
node.on_update { value ->
    print("Got updated node value:");
    print(value);
};

x = 2;
y = 3;

z = x + y;

dbg_trace_full(z);

w = z + 3;

dbg_trace_full(w);

print(2 / (0 - node.current_value()));

delay(10000);
